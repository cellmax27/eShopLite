@page "/users"
@using DataEntities
@using Store.Services
@inject UserService UserService
@inject IConfiguration Configuration
@attribute [StreamRendering(true)]

<PageTitle>Users</PageTitle>

<h1>Users</h1>

<p>Here are some of our amazing outdoor users that you can purchase.</p>

@if (_users is null)
{
    <p><em>Loading...</em></p>
}
else if (_users.Count is 0)
{
    <p><em>There is a problem loading our users. Please try again later.</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Image</th>
                <th>Name</th>
                <th>LastName</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in _users)
            {
                <tr>
                    <td>img</td>
                    <td>@user.Name</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<User>? _users;
    private Uri? _baseUri;

    protected override async Task OnInitializedAsync()
    {
        // Set the base URI from configuration
        var usersEndpoint = Configuration["UserEndpointHttps"] 
            ?? "https://raw.githubusercontent.com/MicrosoftDocs/mslearn-dotnet-cloudnative/main/dotnet-docker/Users/wwwroot/";

        _baseUri = new Uri(usersEndpoint);

        // Simulate asynchronous loading to demonstrate streaming rendering
        _users = await UserService.GetUsersAsync();
    }
}
